name: Build JAR File

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
      # Debug: List files and directories
      - name: List repository contents
        run: ls -R
      # Set up Java environment
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '16'
          distribution: 'temurin'
      # Check if lib/images folder exists
      - name: Check for dependencies folder
        id: lib-check
        run: |
          if [ -d "10-16-2024 PhotoViewierAssignment/lib/images" ]; then
            echo "dependencies=true" >> $GITHUB_ENV
          else
            echo "dependencies=false" >> $GITHUB_ENV
          fi
      # Debug: Verify required files
      - name: Verify required files
        run: |
          echo "Checking required files..."
          test -f "10-16-2024 PhotoViewierAssignment/manifest.txt" || echo "Missing manifest.txt"
          test -d "10-16-2024 PhotoViewierAssignment/lib/images" || echo "lib/images directory is missing"
      # Build JAR without dependencies
      - name: Build JAR (no dependencies)
        if: env.dependencies == 'false'
        run: |
          cd 10-16-2024\ PhotoViewierAssignment
          mkdir -p out
          javac -d out src/*.java
          jar cvfm myproject.jar manifest.txt -C out .
          mv myproject.jar "../JAR Files/myproject.jar"
      # Build JAR with dependencies and resources
      - name: Build JAR (with dependencies and resources)
        if: env.dependencies == 'true'
        run: |
          cd 10-16-2024\ PhotoViewierAssignment
          mkdir -p out/lib/images  # Ensure the target directory exists
          javac -d out src/*.java
          cp -r lib/images/* out/lib/images/  # Copy the images into the correct location
          jar cvfm myproject.jar manifest.txt -C out .
          mv myproject.jar "../JAR Files/myproject.jar"
      # Debug: Verify JAR file creation
      - name: Verify JAR creation
        run: |
          ls -R "JAR Files"
          test -f "JAR Files/myproject.jar" && echo "JAR file created successfully" || echo "JAR file creation failed"
      # Commit and push the JAR file to the repository
      - name: Commit and Push JAR
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add "JAR Files/myproject.jar"
          git commit -m "Add built JAR file [$(date)]"
          git push